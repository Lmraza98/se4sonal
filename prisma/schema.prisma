generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  firstname    String
  lastName     String
  email        String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Product {
  id          Int            @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int
  categoryId  Int
  imageId     Int
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  images      ProductImage[]
  collections ProductCollection[]

  @@index([name])
}
model ProductCollection {
  productId   Int
  collectionId Int

  product     Product @relation(fields: [productId], references: [id])
  collection  Collection @relation(fields: [collectionId], references: [id])

  @@id([productId, collectionId])
}
model Collection {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  products    ProductCollection[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  productId Int
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id])

  @@index([productId])
}

model Categories {
  id          Int    @id @default(autoincrement())
  name        String
  description String

  @@index([name])
}

model OrdersTable {
  id          Int      @id @default(autoincrement())
  userId      Int
  orderStatus String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
}

model OrderItems {
  id              Int      @id @default(autoincrement())
  orderId         Int
  productId       Int
  quantity        Int
  priceAtPurchase Float
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([orderId])
  @@index([productId])
}

model PaymentInfoTable {
  id             Int      @id @default(autoincrement())
  userId         Int
  cardNumber     String
  cardHolderName String
  expirationDate String
  cvv            String
  billingAddress String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([userId])
}

model ShippingInfoTable {
  id        Int      @id @default(autoincrement())
  userId    Int
  address   String
  city      String
  state     String
  zip       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model InventoryLogTable {
  id            Int      @id @default(autoincrement())
  productId     Int
  changeInStock Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([productId])
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String?
  published Boolean  @default(false)
  author    String
  authorId  Int?
  createdAt DateTime @default(now())
  updatedAt DateTime

  @@index([title])
}
